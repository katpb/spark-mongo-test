//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.07 at 01:19:54 PM IST 
//


package com.transset;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for transactionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="transactionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="sale"/>
 *     &lt;enumeration value="journal"/>
 *     &lt;enumeration value="network sale"/>
 *     &lt;enumeration value="suspended sale"/>
 *     &lt;enumeration value="suspended network sale"/>
 *     &lt;enumeration value="claimed sale"/>
 *     &lt;enumeration value="transferred sale"/>
 *     &lt;enumeration value="clock"/>
 *     &lt;enumeration value="payin"/>
 *     &lt;enumeration value="payout"/>
 *     &lt;enumeration value="safedrop"/>
 *     &lt;enumeration value="nosale"/>
 *     &lt;enumeration value="void"/>
 *     &lt;enumeration value="transfer failed"/>
 *     &lt;enumeration value="safeloan"/>
 *     &lt;enumeration value="pumptest"/>
 *     &lt;enumeration value="fcmerch"/>
 *     &lt;enumeration value="pop fuel discount (code)"/>
 *     &lt;enumeration value="pop fuel discount (auto)"/>
 *     &lt;enumeration value="pop fuel discount (coup)"/>
 *     &lt;enumeration value="refund sale"/>
 *     &lt;enumeration value="openCashier"/>
 *     &lt;enumeration value="closeCashier"/>
 *     &lt;enumeration value="printCashier"/>
 *     &lt;enumeration value="refund void"/>
 *     &lt;enumeration value="refund network sale"/>
 *     &lt;enumeration value="network preauth"/>
 *     &lt;enumeration value="force post"/>
 *     &lt;enumeration value="autocollect"/>
 *     &lt;enumeration value="periodClose"/>
 *     &lt;enumeration value="kioskOrder"/>
 *     &lt;enumeration value="kioskOrder void"/>
 *     &lt;enumeration value="safedropcorrection"/>
 *     &lt;enumeration value="fuelpriceChange"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "transactionType")
@XmlEnum
public enum TransactionType {

    @XmlEnumValue("sale")
    SALE("sale"),
    @XmlEnumValue("journal")
    JOURNAL("journal"),
    @XmlEnumValue("network sale")
    NETWORK_SALE("network sale"),
    @XmlEnumValue("suspended sale")
    SUSPENDED_SALE("suspended sale"),
    @XmlEnumValue("suspended network sale")
    SUSPENDED_NETWORK_SALE("suspended network sale"),
    @XmlEnumValue("claimed sale")
    CLAIMED_SALE("claimed sale"),
    @XmlEnumValue("transferred sale")
    TRANSFERRED_SALE("transferred sale"),
    @XmlEnumValue("clock")
    CLOCK("clock"),
    @XmlEnumValue("payin")
    PAYIN("payin"),
    @XmlEnumValue("payout")
    PAYOUT("payout"),
    @XmlEnumValue("safedrop")
    SAFEDROP("safedrop"),
    @XmlEnumValue("nosale")
    NOSALE("nosale"),
    @XmlEnumValue("void")
    VOID("void"),
    @XmlEnumValue("transfer failed")
    TRANSFER_FAILED("transfer failed"),
    @XmlEnumValue("safeloan")
    SAFELOAN("safeloan"),
    @XmlEnumValue("pumptest")
    PUMPTEST("pumptest"),
    @XmlEnumValue("fcmerch")
    FCMERCH("fcmerch"),
    @XmlEnumValue("pop fuel discount (code)")
    POP_FUEL_DISCOUNT_CODE("pop fuel discount (code)"),
    @XmlEnumValue("pop fuel discount (auto)")
    POP_FUEL_DISCOUNT_AUTO("pop fuel discount (auto)"),
    @XmlEnumValue("pop fuel discount (coup)")
    POP_FUEL_DISCOUNT_COUP("pop fuel discount (coup)"),
    @XmlEnumValue("refund sale")
    REFUND_SALE("refund sale"),
    @XmlEnumValue("openCashier")
    OPEN_CASHIER("openCashier"),
    @XmlEnumValue("closeCashier")
    CLOSE_CASHIER("closeCashier"),
    @XmlEnumValue("printCashier")
    PRINT_CASHIER("printCashier"),
    @XmlEnumValue("refund void")
    REFUND_VOID("refund void"),
    @XmlEnumValue("refund network sale")
    REFUND_NETWORK_SALE("refund network sale"),
    @XmlEnumValue("network preauth")
    NETWORK_PREAUTH("network preauth"),
    @XmlEnumValue("force post")
    FORCE_POST("force post"),
    @XmlEnumValue("autocollect")
    AUTOCOLLECT("autocollect"),
    @XmlEnumValue("periodClose")
    PERIOD_CLOSE("periodClose"),
    @XmlEnumValue("kioskOrder")
    KIOSK_ORDER("kioskOrder"),
    @XmlEnumValue("kioskOrder void")
    KIOSK_ORDER_VOID("kioskOrder void"),
    @XmlEnumValue("safedropcorrection")
    SAFEDROPCORRECTION("safedropcorrection"),
    @XmlEnumValue("fuelpriceChange")
    FUELPRICE_CHANGE("fuelpriceChange");
    private final String value;

    TransactionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TransactionType fromValue(String v) {
        for (TransactionType c: TransactionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
