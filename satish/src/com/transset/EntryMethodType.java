//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.07 at 01:19:54 PM IST 
//


package com.transset;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for entryMethodType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="entryMethodType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Swipe"/>
 *     &lt;enumeration value="Island"/>
 *     &lt;enumeration value="Swipe w/DL"/>
 *     &lt;enumeration value="Swipe T1"/>
 *     &lt;enumeration value="Island T1"/>
 *     &lt;enumeration value="Swipe T2"/>
 *     &lt;enumeration value="Island T2"/>
 *     &lt;enumeration value="Manual"/>
 *     &lt;enumeration value="Manual w/DL"/>
 *     &lt;enumeration value="Manual Fast Credit"/>
 *     &lt;enumeration value="RF Inside"/>
 *     &lt;enumeration value="RF Outside"/>
 *     &lt;enumeration value="RF Inside T2"/>
 *     &lt;enumeration value="RF Outside T2"/>
 *     &lt;enumeration value="Biometric"/>
 *     &lt;enumeration value="Manual Island"/>
 *     &lt;enumeration value="SmartCard"/>
 *     &lt;enumeration value="RadioFrequency"/>
 *     &lt;enumeration value="Keyboard"/>
 *     &lt;enumeration value="Mobile"/>
 *     &lt;enumeration value="Scanner"/>
 *     &lt;enumeration value="NA"/>
 *     &lt;enumeration value="RadioFrequencySP"/>
 *     &lt;enumeration value="RadioFrequencyNozzle"/>
 *     &lt;enumeration value="Skipped"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "entryMethodType")
@XmlEnum
public enum EntryMethodType {

    @XmlEnumValue("Swipe")
    SWIPE("Swipe"),
    @XmlEnumValue("Island")
    ISLAND("Island"),
    @XmlEnumValue("Swipe w/DL")
    SWIPE_W_DL("Swipe w/DL"),
    @XmlEnumValue("Swipe T1")
    SWIPE_T_1("Swipe T1"),
    @XmlEnumValue("Island T1")
    ISLAND_T_1("Island T1"),
    @XmlEnumValue("Swipe T2")
    SWIPE_T_2("Swipe T2"),
    @XmlEnumValue("Island T2")
    ISLAND_T_2("Island T2"),
    @XmlEnumValue("Manual")
    MANUAL("Manual"),
    @XmlEnumValue("Manual w/DL")
    MANUAL_W_DL("Manual w/DL"),
    @XmlEnumValue("Manual Fast Credit")
    MANUAL_FAST_CREDIT("Manual Fast Credit"),
    @XmlEnumValue("RF Inside")
    RF_INSIDE("RF Inside"),
    @XmlEnumValue("RF Outside")
    RF_OUTSIDE("RF Outside"),
    @XmlEnumValue("RF Inside T2")
    RF_INSIDE_T_2("RF Inside T2"),
    @XmlEnumValue("RF Outside T2")
    RF_OUTSIDE_T_2("RF Outside T2"),
    @XmlEnumValue("Biometric")
    BIOMETRIC("Biometric"),
    @XmlEnumValue("Manual Island")
    MANUAL_ISLAND("Manual Island"),
    @XmlEnumValue("SmartCard")
    SMART_CARD("SmartCard"),
    @XmlEnumValue("RadioFrequency")
    RADIO_FREQUENCY("RadioFrequency"),
    @XmlEnumValue("Keyboard")
    KEYBOARD("Keyboard"),
    @XmlEnumValue("Mobile")
    MOBILE("Mobile"),
    @XmlEnumValue("Scanner")
    SCANNER("Scanner"),
    NA("NA"),
    @XmlEnumValue("RadioFrequencySP")
    RADIO_FREQUENCY_SP("RadioFrequencySP"),
    @XmlEnumValue("RadioFrequencyNozzle")
    RADIO_FREQUENCY_NOZZLE("RadioFrequencyNozzle"),
    @XmlEnumValue("Skipped")
    SKIPPED("Skipped");
    private final String value;

    EntryMethodType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EntryMethodType fromValue(String v) {
        for (EntryMethodType c: EntryMethodType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
